/*
 * Copyright (c) 2007-2015 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def hadoop2Version = '2.6.0'
def tezVersion = '0.6.1'

// get hadoop configuration
apply from: "${rootDir}/settings/hadoop2-tez-settings.gradle"

repositories {
  maven{ url 'https://repository.apache.org/content/repositories/releases/' }
  // Comment this in, if you want to test against local snapshot builds
  // mavenLocal()
}

dependencies {
  runtime( group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoop2Version )
  runtime( group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoop2Version )

  runtime( group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoop2Version )

  runtime( group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5' )
  runtime( group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.5' ) 

  runtime( group: 'org.apache.tez', name: 'tez-tests', version: tezVersion, classifier: 'tests' )
  runtime( group: 'org.apache.tez', name: 'tez-api', version: tezVersion )
  runtime( group: 'org.apache.tez', name: 'tez-dag', version: tezVersion )
  runtime( group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoop2Version )

  runtime( group: 'org.apache.hadoop', name: 'hadoop-aws', version: hadoop2Version )
  runtime( group: 'org.apache.tez', name: 'tez-yarn-timeline-history-with-acls', version: tezVersion )
}

configurations.all {
  resolutionStrategy {

    force 'com.google.guava:guava:11.0.2'
    eachDependency { def details ->
      if( details.requested.group == 'org.apache.hadoop' )
        details.useVersion hadoop2Version
    }
  }
}

test {
  systemProperties[ 'platform.tez.am.tez-ui.webservice.enable' ] = 'false'
}

// If your tests have to run on remote cluster, comment this in and edit
// the jobtracker and hdfs master configs accordingly.
//test {
//  systemProperties[ 'mapred.jar' ] = buildHadoopJar.archivePath
//  systemProperties[ 'fs.default.name' ] = new String( 'hdfs://master.local:9000' )
//  systemProperties[ 'mapred.job.tracker' ] = new String( 'master.local:9001' )
//}
